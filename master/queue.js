import { writeFileSync} from "fs";
export { saveQueue, addCustomerQueue, removeCustomerQueue, getUserQueueHead, getTaskQueueHead };


console.log("queue.js loaded");
let userQueue = [];
let taskQueue = [];


function addCustomerQueue(user, task){
    userQueue.push(user);
    taskQueue.push(task);
} 

function removeCustomerQueue(){
    userQueue.shift();
    taskQueue.shift();
}

function getUserQueueHead(){
    if (userQueue.length === 0){
        return console.log("Userque is empty");
    } else {
        return userQueue[0];
    }
}

function getTaskQueueHead(){
    if (taskQueue.length === 0){
        return console.log("Taskque is empty");
    } else {
        return taskQueue[0];
    }
}

const csvMaker = function (data){ //This function makes the two arrays of the queue data into a csv format
    console.log("----csvMaker works!----");
    let csvRows = [];
    
    const headers = Object.keys(data);

    csvRows.push(headers.join(','));

    const values = Object.values(data).join(',\n');
    csvRows.push(values);

    return csvRows.join('\n');
}

const serverDownloadCsv = function (data){ //Somehow this will do the downloading of the csv file on the server
    
    console.log("----ServerDownloadCSV is working----");
    try {
        console.log("----The try in the ServerDownloadCSV is working----");
        writeFileSync("master/autoGeneratedFiles/queue.csv",data,{encoding:'utf8',flag:'w'});
    } catch (err) {
        console.error(err);
    }
}


const saveQueue = async function (){        //This function will at some point save the current queue as a csv file on the server-side
    let data = {                      //This is done in case anything goes down on the server
        User: userQueue,              //we will still know what was in the queue and the order
        task: taskQueue
    }
    const csvData = csvMaker(data);
    serverDownloadCsv(csvData);
}
